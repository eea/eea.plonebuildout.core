global
  log 127.0.0.1 local6
  maxconn  ${parts.haproxyconf['maxconn']}
  user     ${parts.haproxyconf['user']}
  group    ${parts.haproxyconf['group']}
  daemon
  nbproc 1

defaults
  mode http
  option httpclose
  # Remove requests from the queue if people press stop button
  option abortonclose
  # Try to connect this many times on failure
  retries 3
  # If a client is bound to a particular backend but it goes down,
  # send them to a different one
  option redispatch
  monitor-uri /haproxy-ping

  timeout connect 7s
  timeout queue   300s
  timeout client  300s
  timeout server  300s

  # Enable status page at this URL, on the port HAProxy is bound to
  stats enable
  stats uri /haproxy-status
  stats refresh 5s
  stats realm Haproxy\ statistics

frontend zopecluster
  bind ${parts.haproxyconf['bind']}
  default_backend zope

# Load balancing over the zope instances
backend zope
  # Use Zope's __ac cookie as a basis for session stickiness if present.
  appsession __ac len 32 timeout 1d
  # Otherwise add a cookie called "serverid" for maintaining session stickiness.
  # This cookie lasts until the client's browser closes, and is invisible to Zope.
  cookie serverid insert nocache indirect
  # If no session found, use the roundrobin load-balancing algorithm to pick a backend.
  balance roundrobin
  # Use / (the default) for periodic backend health checks
  option httpchk

  # Server options:
  # "cookie" sets the value of the serverid cookie to be used for the server
  # "maxconn" is how many connections can be sent to the server at once
  # "check" enables health checks
  # "rise 1" means consider Zope up after 1 successful health check
  {% if parts.www1['recipe'] %}
  server  plone0101 127.0.0.1:${parts.www1['http-address']} cookie p0101 check maxconn 2 rise 1
  {% end %}
  {% if parts.www2['recipe'] %}
  server  plone0102 127.0.0.1:${parts.www2['http-address']} cookie p0102 check maxconn 2 rise 1
  {% end %}
  {% if parts.www3['recipe'] %}
  server  plone0103 127.0.0.1:${parts.www3['http-address']} cookie p0103 check maxconn 2 rise 1
  {% end %}
  {% if parts.www4['recipe'] %}
  server  plone0104 127.0.0.1:${parts.www4['http-address']} cookie p0104 check maxconn 2 rise 1
  {% end %}
  {% if parts.www5['recipe'] %}
  server  plone0105 127.0.0.1:${parts.www5['http-address']} cookie p0105 check maxconn 2 rise 1
  {% end %}
  {% if parts.www6['recipe'] %}
  server  plone0106 127.0.0.1:${parts.www6['http-address']} cookie p0106 check maxconn 2 rise 1
  {% end %}
  {% if parts.www7['recipe'] %}
  server  plone0107 127.0.0.1:${parts.www7['http-address']} cookie p0107 check maxconn 2 rise 1
  {% end %}
  {% if parts.www8['recipe'] %}
  server  plone0108 127.0.0.1:${parts.www8['http-address']} cookie p0108 check maxconn 2 rise 1
  {% end %}
